// <auto-generated />
using System;
using APPARCA.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace APPARCA.Migrations
{
    [DbContext(typeof(ApparcaContexto))]
    [Migration("20221231194847_connulls")]
    partial class connulls
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("APPARCA.Models.Plaza", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Ancho")
                        .HasColumnType("int");

                    b.Property<int>("ArrendadorId")
                        .HasColumnType("int");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("EsVerificada")
                        .HasColumnType("bit");

                    b.Property<string>("FechaFinal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FechaInicio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoraFinal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoraInicio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Imagen")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("Largo")
                        .HasColumnType("int");

                    b.Property<string>("Latitud")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Longitud")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("PrecioHora")
                        .HasColumnType("real");

                    b.Property<float?>("PrecioMando")
                        .HasColumnType("real");

                    b.Property<string>("formatoImagen")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ArrendadorId");

                    b.ToTable("Plazas", (string)null);
                });

            modelBuilder.Entity("APPARCA.Models.Reserva", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("ArrendatarioId")
                        .HasColumnType("int");

                    b.Property<bool?>("Confirmada")
                        .HasColumnType("bit");

                    b.Property<byte[]>("Contrato")
                        .HasColumnType("varbinary(max)");

                    b.Property<DateTime?>("FechaFinal")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan?>("HoraFinal")
                        .HasColumnType("time");

                    b.Property<TimeSpan?>("HoraInicio")
                        .HasColumnType("time");

                    b.Property<int?>("PlazaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ArrendatarioId");

                    b.HasIndex("PlazaId");

                    b.ToTable("Reservas", (string)null);
                });

            modelBuilder.Entity("APPARCA.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Apellidos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Correo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dni")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios", (string)null);
                });

            modelBuilder.Entity("APPARCA.Models.Plaza", b =>
                {
                    b.HasOne("APPARCA.Models.User", "Arrendador")
                        .WithMany("Plazas")
                        .HasForeignKey("ArrendadorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Arrendador");
                });

            modelBuilder.Entity("APPARCA.Models.Reserva", b =>
                {
                    b.HasOne("APPARCA.Models.User", "Arrendatario")
                        .WithMany("ReservasComoArrendatario")
                        .HasForeignKey("ArrendatarioId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("APPARCA.Models.Plaza", "PlazaReservada")
                        .WithMany("Reservas")
                        .HasForeignKey("PlazaId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Arrendatario");

                    b.Navigation("PlazaReservada");
                });

            modelBuilder.Entity("APPARCA.Models.Plaza", b =>
                {
                    b.Navigation("Reservas");
                });

            modelBuilder.Entity("APPARCA.Models.User", b =>
                {
                    b.Navigation("Plazas");

                    b.Navigation("ReservasComoArrendatario");
                });
#pragma warning restore 612, 618
        }
    }
}
